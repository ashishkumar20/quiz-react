{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/quiz-app-routing/src/pages/QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { quizData } from '../quizData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  var _questions, _currentQuestion, _currentQuestion2, _currentQuestion2$opt;\n  const params = useParams();\n  const category = params.categoryId;\n  const navigate = useNavigate();\n  const [currentQuestionIdx, setCurrentQuestionIdx] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [unansweredCount, setUnansweredCount] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [showAnswer, setShowAnswer] = useState(false);\n  useEffect(() => {\n    var _quizData$categories$;\n    const questions = ((_quizData$categories$ = quizData.categories.find(cat => cat.id === category)) === null || _quizData$categories$ === void 0 ? void 0 : _quizData$categories$.questions) || [];\n    console.log(\"Category Questions: \", questions);\n    const currentQuestion = questions.length > 0 ? questions[currentQuestionIdx] : null;\n  }, [category]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNext();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n  const handleAnswer = answer => {\n    if (selectedAnswer) return;\n    setSelectedAnswer(answer);\n    setShowAnswer(true);\n    if (answer[0] === currentQuestion.correctAnswer) {\n      setCorrectCount(prev => prev + 1);\n    }\n  };\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setUnansweredCount(prev => prev + 1);\n    }\n    if (currentQuestionIdx + 1 < questions.length) {\n      setCurrentQuestionIdx(idx => idx + 1);\n      setSelectedAnswer(null);\n      setShowAnswer(false);\n      setTimeLeft(currentQuestion.timeLimit);\n    } else {\n      navigate('/result', {\n        state: {\n          correct: correctCount,\n          unanswered: unansweredCount\n        }\n      });\n    }\n  };\n  if (!category) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No category selected.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question \", currentQuestionIdx + 1, \" of \", (_questions = questions) === null || _questions === void 0 ? void 0 : _questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timer\",\n        children: [\"\\u23F1 \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"question\",\n      children: (_currentQuestion = currentQuestion) === null || _currentQuestion === void 0 ? void 0 : _currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: (_currentQuestion2 = currentQuestion) === null || _currentQuestion2 === void 0 ? void 0 : (_currentQuestion2$opt = _currentQuestion2.options) === null || _currentQuestion2$opt === void 0 ? void 0 : _currentQuestion2$opt.map(option => {\n        var _currentQuestion3;\n        const isCorrect = option[0] === ((_currentQuestion3 = currentQuestion) === null || _currentQuestion3 === void 0 ? void 0 : _currentQuestion3.correctAnswer);\n        const isSelected = selectedAnswer === option;\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          className: `option-btn ${isSelected ? isCorrect ? 'correct' : 'incorrect' : ''}`,\n          disabled: !!selectedAnswer,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      className: \"btn next-btn\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"ujf6IKK3EALkh3SKHVAkAaBd6oI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","quizData","jsxDEV","_jsxDEV","QuizPage","_s","_questions","_currentQuestion","_currentQuestion2","_currentQuestion2$opt","params","category","categoryId","navigate","currentQuestionIdx","setCurrentQuestionIdx","selectedAnswer","setSelectedAnswer","correctCount","setCorrectCount","unansweredCount","setUnansweredCount","timeLeft","setTimeLeft","showAnswer","setShowAnswer","_quizData$categories$","questions","categories","find","cat","id","console","log","currentQuestion","length","handleNext","timer","setTimeout","clearTimeout","handleAnswer","answer","correctAnswer","prev","idx","timeLimit","state","correct","unanswered","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","options","map","option","_currentQuestion3","isCorrect","isSelected","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/lenovo/Downloads/quiz-app-routing/src/pages/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { quizData } from '../quizData';\n\nconst QuizPage = () => {\n  const params = useParams();\n  const category = params.categoryId;\n  const navigate = useNavigate();\n\n  const [currentQuestionIdx, setCurrentQuestionIdx] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [correctCount, setCorrectCount] = useState(0);\n  const [unansweredCount, setUnansweredCount] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const [showAnswer, setShowAnswer] = useState(false);\n\n  useEffect(()=>{\n      const questions = quizData.categories.find(cat=> cat.id === category)?.questions || [];\n      console.log(\"Category Questions: \", questions);\n      const currentQuestion = questions.length > 0? questions[currentQuestionIdx]: null;\n  }, [category]);\n\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handleNext();\n      return;\n    }\n    const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    return () => clearTimeout(timer);\n  }, [timeLeft]);\n\n  const handleAnswer = (answer) => {\n    if (selectedAnswer) return;\n    setSelectedAnswer(answer);\n    setShowAnswer(true);\n    if (answer[0] === currentQuestion.correctAnswer) {\n      setCorrectCount((prev) => prev + 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (!selectedAnswer) {\n      setUnansweredCount((prev) => prev + 1);\n    }\n    if (currentQuestionIdx + 1 < questions.length) {\n      setCurrentQuestionIdx((idx) => idx + 1);\n      setSelectedAnswer(null);\n      setShowAnswer(false);\n      setTimeLeft(currentQuestion.timeLimit);\n    } else {\n      navigate('/result', {\n        state: { correct: correctCount, unanswered: unansweredCount }\n      });\n    }\n  };\n\n  if (!category) return <p>No category selected.</p>;\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h2>Question {currentQuestionIdx + 1} of {questions?.length}</h2>\n        <span className=\"timer\">‚è± {timeLeft}s</span>\n      </div>\n      <p className=\"question\">{currentQuestion?.question}</p>\n      <div className=\"options\">\n        {currentQuestion?.options?.map((option) => {\n          const isCorrect = option[0] === currentQuestion?.correctAnswer;\n          const isSelected = selectedAnswer === option;\n          return (\n            <button\n              key={option}\n              onClick={() => handleAnswer(option)}\n              className={`option-btn ${isSelected ? (isCorrect ? 'correct' : 'incorrect') : ''}`}\n              disabled={!!selectedAnswer}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </div>\n      <button onClick={handleNext} className=\"btn next-btn\">Next</button>\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}